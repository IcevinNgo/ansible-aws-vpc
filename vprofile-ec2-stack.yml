---
- name: Setup vprofile stack
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Import VPC setup Variable
      include_vars: vars/vpc-output_vars

    - name: Import VPC setup Variable
      include_vars: vars/vprostacksetup

    - name: Create vprofile ec2 key
      ec2_key:
        name: vprokey
        region: {{region}}
      register: vprokey_out

    - name: Save private key into file loginkey_vpro.pem
      copy:
        content: {{vprokey_out.key.private_key}}
        dest: ./loginkey_vpro.pem
        mode: 0400
      when: vprokey_out.changed

    - name: Create SG for Load Balancer
      ec2_group:
        name: vproELB-sg
        description: Allow port 80 from everywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: vproELBSG_out

    - name: Create SG for Vprofile Stack
        ec2_group:
          name: vproStack-sg
          description: Allow port 80 from ELB and port 22 from Bastion Host
          region: "{{region}}"
          vpc_id: "{{vpcid}}"
          purge_rules: no
          rules:
            - proto: tcp
              from_port: 80
              to_port: 80
              group_ip: "{{vproELBSG_out.group_id}}"

            - proto: tcp
              from_port: 22
              to_port: 22
              group_ip: "{{BastionSGid}}"
        register: vproStackSG_out

    - name: Create SG for Vprofile Stack
      ec2_group:
        name: vproStack-sg
        description: Allow internal traffic
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no #KEEP EXISTING RULES AND ADD NEW RULES
        rules:
          - proto: all
            group_ip: "{{vproStackSG_out.group_id}}"
      register: vproStackSG_out

    - name: Create nginx web01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "web01"
          Project: "Vprofile"
          Owner: "DevOps Team"
        exact_count: 1
        count_tag:
          Name: "web01"
          Project: "Vprofile"
          Owner: "DevOps Team"
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{pubsub1id}}"
      register: web01_out

    - name: Create tomcat app01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "app01"
          Project: "Vprofile"
          Owner: "DevOps Team"
        exact_count: 1
        count_tag:
          Name: "app01"
          Project: "Vprofile"
          Owner: "DevOps Team"
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{pubsub1id}}"
      register: app01_out

    - name: Create mecache mc01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "mc01"
          Project: "Vprofile"
          Owner: "DevOps Team"
        exact_count: 1
        count_tag:
          Name: "mc01"
          Project: "Vprofile"
          Owner: "DevOps Team"
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{pubsub1id}}"
      register: mc01_out

    - name: Create RabbitMQ rmq01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "rmq01"
          Project: "Vprofile"
          Owner: "DevOps Team"
        exact_count: 1
        count_tag:
          Name: "rmq01"
          Project: "Vprofile"
          Owner: "DevOps Team"
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{pubsub1id}}"
      register: rmq01_out

    - name: Create Mysql db01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "db01"
          Project: "Vprofile"
          Owner: "DevOps Team"
        exact_count: 1
        count_tag:
          Name: "db01"
          Project: "Vprofile"
          Owner: "DevOps Team"
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{pubsub1id}}"
      register: db01_out

    - debug:
        var: db01_out.tagged_instances[0].id

    - name: Create ELB
        delegate_to: localhost
        elb_classic_lb:
          name: "vprofile-elb"
          region: {{region}}
          state: {{state}}
          instance_ids:
            - {{web01_out.tagged_instances[0].id}}
          purge_instance_ids: true #remove instances not defined in list above
          security_group: {{vproELBSG_out.group_id}}
          subnets:
            - {{pubsub1id}}
            - {{pubsub2id}}
            - {{pubsub3id}}
          listeners:
            - protocol: http #Options are http, https, ssl, tcp
              load_balancer_port: 80
              instance_port: 80
        register: vprofile-elb_out

    - name: Insert/Update Hosts IP & Name in file provision-stack/group_vars/hostip
      blockinfile:
        path: provision-stack/group_vars/hostip
        block:
          web01_ip: {{web01_out.tagged_instances[0].private_ip}}
          app01_ip: {{app01_out.tagged_instances[0].private_ip}}
          rmq01_ip: {{rmq01_out.tagged_instances[0].private_ip}}
          mc01_ip: {{mc01_out.tagged_instances[0].private_ip}}
          db01_ip: {{db01_out.tagged_instances[0].private_ip}}

    - name: Copy login key to provision_stack directory
      copy:
        src: loginkey_vpro.pem
        dest: provision_stack/loginkey_vpro.pem
        mode: 0400

