- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC Variables
      include_vars: vars/vpc_setup

    - name: Create vprofile VPC
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{state}}"
      register: vpc_out

    - name: Create public subnet 1 in Zone 1
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{PubSub1Cidr}}"
        map_public: no #CHANGE TO YES
        tags:
          Name: vprofile_pubsub1
      register: pubsub1_out

    - name: Create public subnet 2 Zone 2
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{PubSub2Cidr}}"
        map_public: no #CHANGE TO YES
        tags:
          Name: vprofile_pubsub2
      register: pubsub2_out

    - name: Create public subnet 3 Zone 3
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{PubSub3Cidr}}"
        map_public: no #CHANGE TO YES
        tags:
          Name: vprofile_pubsub3
      register: pubsub3_out

    - name: Create private subnet 1 in Zone 1
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{PrivSub1Cidr}}"
        tags:
          Name: vprofile_privsub1
      register: privsub1_out

    - name: Create private subnet 2 in Zone 2
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{PrivSub2Cidr}}"
        tags:
          Name: vprofile_privsub2
      register: privsub2_out

    - name: Create private subnet 3 in Zone 3
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{PrivSub3Cidr}}"
        tags:
          Name: vprofile_privsub3
      register: privsub3_out

    - name: Internet Gateway setup
      ec2_vpc_igw:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        tags:
          Name: vprofile_IGW
      register: igw_out

    - name: Public subnet route table setup
      ec2_vpc_route_table:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        subnets:
          - "{{pubsub1_out.subnet.id}}"
          - "{{pubsub2_out.subnet.id}}"
          - "{{pubsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igw_out.gateway_id}}"
        tags:
          Name: vprofile_pubRT
      register: pubRT_out

#Delete NAT gateway after use so you won't be charged for the EIP
    - name: create new NAT gateway and allocate new EIP if NAT gateway does not exist in the
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{pubsub1_out.subnet.id}}"
        wait: yes
        region: "{{region}}"
        if_exist_do_not_create: yes
      register: NATGW_out

    - name: Private subnet route table setup
      ec2_vpc_route_table:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        subnets:
          - "{{privsub1_out.subnet.id}}"
          - "{{privsub2_out.subnet.id}}"
          - "{{privsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{NATGW_out.nat_gateway_id}}"
        tags:
          Name: vprofile_privRT
      register: privRT_out

#Print IDs for storing
    - debug:
        var: "{{item}}"
      loop:
        - vpc_out.vpc.id
        - pubsub1_out.subnet.id
        - pubsub2_out.subnet.id
        - pubsub3_out.subnet.id
        - privsub1_out.subnet.id
        - privsub2_out.subnet.id
        - privsub3out.subnet.id
        - igw_out.gateway_id
        - pubRT_out.route_table.id
        - NATGW_out.nat_gateway_id
        - privRT_out.route_table.id
#Store fact cached
    - set_fact:
        vpcid: "{{vpc_out.vpc.id}}"
        pubsub1id: "{{pubsub1_out.subnet.id}}"
        pubsub2id: "{{pubsub2_out.subnet.id}}"
        pubsub3id: "{{pubsub3_out.subnet.id}}"
        privsub1id: "{{privsub1_out.subnet.id}}"
        privsub2id: "{{privsub2_out.subnet.id}}"
        privsub3id: "{{privsub3out.subnet.id}}"
        igwid: "{{igw_out.gateway_id}}"
        pubRTid: "{{pubRT_out.route_table.id}}"
        NATGWid: "{{NATGW_out.nat_gateway_id}}"
        privRTid: "{{privRT_out.route_table.id}}"
        cacheable: yes

    - name: Create variables file for vpc output
      copy:
        content: "region: {{region}}\nvpcid: {{vpc_out.vpc.id}}\npubsub1id: {{pubsub1_out.subnet.id}}\npubsub2id: {{pubsub2_out.subnet.id}}\npubsub3id: {{pubsub3_out.subnet.id}}\nprivsub1id: {{privsub1_out.subnet.id}}\nprivsub2id: {{privsub2_out.subnet.id}}\nprivsub3id: {{privsub3out.subnet.id}}\nigwid: {{igw_out.gateway_id}}\npubRTid: {{pubRT_out.route_table.id}}\nNATGWid: {{NATGW_out.nat_gateway_id}}\nprivRTid: {{privRT_out.route_table.id}}"
        dest: vars/vpc-output_vars